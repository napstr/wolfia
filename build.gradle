plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'com.gorylenko.gradle-git-properties' version '1.4.17' //provide meta info about the git repo
    id 'com.github.johnrengelman.shadow' version '2.0.1'
//    id 'com.sedmelluq.jdaction' version '1.0.2' //check for unused RestActions incompatible with java9
    id "com.jfrog.bintray" version "1.7.3"
}

ext {
    moduleName = 'wolfia'
    buildNumber = (System.getenv('CI') ? System.getenv('BUILD_NUMBER') : 'DEV')
}
group = 'space.npstr.Wolfia'
//noinspection GroovyAssignabilityCheck
version = '0.11.1-' + project.ext.buildNumber


mainClassName = "space.npstr.wolfia.Wolfia"

sourceCompatibility = 9
targetCompatibility = 9

repositories {
    jcenter()                               // JDA, maybe others
    mavenCentral()                          // everything else
    mavenLocal()                            // local maven repo, mostly for testing stuff
    maven { url 'https://jitpack.io' }      //for getting builds from github
}

dependencies {
    //@formatter:off
    ext.jdaVersion                = '3.3.1_308'
    ext.logbackVersion            = '1.2.3'
    ext.sentryVersion             = '1.6.3'
    ext.discordAppenderVersion    = '1.0.0'
    ext.yamlVersion               = '1.19'
    ext.okhttpVersion             = '3.9.1'
    ext.sqlsauceVersion           = '0a857c0fb7f3266b136a61714b58bab8d60d6a0b'
    ext.jaxbApiVersion            = '2.3.0'
    ext.caffeineVersion            = '2.6.0'

    ext.sparkVersion              = '2.7.1'
    ext.sparkThymeVersion         = '2.7.1'
    ext.thymeleafVersion          = '3.0.9.RELEASE'

    compile group: 'net.dv8tion',    name: 'JDA',                      version: ext.jdaVersion             //discord API
    compile group: 'ch.qos.logback', name: 'logback-classic',          version: ext.logbackVersion         //logging framework
    compile group: 'space.npstr',    name: 'logback-discord-appender', version: ext.discordAppenderVersion //log to discord
    compile group: 'io.sentry',      name: 'sentry-logback',           version: ext.sentryVersion          //error aggregation
    compile group: 'org.yaml',       name: 'snakeyaml',                version: ext.yamlVersion            //parse yaml files
    compile group: 'com.squareup.okhttp3', name: 'okhttp',             version: ext.okhttpVersion          //http client
    compile group: 'space.npstr.SqlSauce', name: 'sqlsauce-core',      version: ext.sqlsauceVersion        //db stack
    compile group: 'space.npstr.SqlSauce', name: 'discord-entities',   version: ext.sqlsauceVersion        //moar db entities
    compile group: 'javax.xml.bind', name: 'jaxb-api',                 version: ext.jaxbApiVersion         //required by hibernate for java 9
    compile group: 'com.github.ben-manes.caffeine', name:'caffeine',   version: ext.caffeineVersion        // caches



    //charts stuff
    compile group: 'com.sparkjava',  name: 'spark-core',               version: ext.sparkVersion
    compile group: 'com.sparkjava',  name: 'spark-template-thymeleaf', version: ext.sparkThymeVersion
    compile group: 'org.thymeleaf',  name: 'thymeleaf',                version: ext.thymeleafVersion
    //@formatter:on
}


import org.apache.tools.ant.filters.ReplaceTokens
import org.gradle.api.tasks.wrapper.Wrapper.DistributionType

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
    distributionType = DistributionType.ALL
}

processResources {
    //inject values into app.properties
    filesMatching("**/app.properties") {
        filter ReplaceTokens, tokens: [
                "project.version"   : project.version,
                "project.groupId"   : project.group,
                "project.artifactId": project.ext.moduleName,
                "env.BUILD_NUMBER"  : project.ext.buildNumber,
                "env.BUILD_TIME"    : System.currentTimeMillis() + ''
        ]
    }
}

compileJava.dependsOn 'clean'
compileJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"

shadowJar {
    archiveName = "wolfia.jar"
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    filesSpec {
        from 'build/libs'
        into '.'
        rename '(.+)\\.(.+)', '$1-' + project.version + '.$2'
    }
    dryRun = false
    publish = true
    pkg {
        repo = 'wolfia'
        name = 'beta'
        userOrg = user
        version {
            name = project.version
        }
    }
}
