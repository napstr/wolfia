/*
 * Copyright (C) 2017 Dennis Neufeld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package space.npstr.wolfia.db.entities.stats;

import net.dv8tion.jda.core.events.message.MessageReceivedEvent;
import space.npstr.sqlsauce.entities.SaucedEntity;
import space.npstr.wolfia.commands.CommandContext;

import javax.annotation.Nonnull;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Created by napster on 03.07.17.
 * <p>
 * Just dump info about commands run into the database
 */
@Entity
@Table(name = "stats_commands")
public class CommandStats extends SaucedEntity<Long, CommandStats> {

    private static final long serialVersionUID = -587366706601508808L;

    //just an autogenerated value
    @Id
    @GeneratedValue
    @Column(name = "command_id")
    private long commandId;

    @Column(name = "invoker_id")
    private long invokerId;

    @Column(name = "channel_id")
    private long channelId;

    @Column(name = "is_private")
    private boolean isPrivate;

    @Column(name = "guild_id")
    private long guildId;

    @Column(name = "raw_message", length = 2000, columnDefinition = "text")
    private String rawMessage;

    @Column(name = "command_class", columnDefinition = "text")
    private String commandClass;

    @Column(name = "sent_time")
    private long sent;

    @Column(name = "received_time")
    private long received;

    @Column(name = "executed_time")
    private long executed;

    @Column(name = "execution_duration")
    private long duration;

    @Column(name = "successful")
    private boolean successful;

    public CommandStats() {
    }

    @Deprecated //we are going to use proper metrics in the future
    public CommandStats(@Nonnull final CommandContext context, final long executed, final boolean successful) {

        final MessageReceivedEvent event = context.event;

        this.invokerId = context.invoker.getIdLong();
        this.channelId = context.channel.getIdLong();
        switch (context.msg.getChannelType()) {
            case TEXT: //Guild
                this.isPrivate = false;
                this.guildId = event.getGuild().getIdLong();
                break;
            case PRIVATE:
                this.isPrivate = true;
                this.guildId = -1;
                break;
            default:
                throw new IllegalArgumentException("Unexpected channel type of message " + context.msg.getIdLong());
        }
        this.rawMessage = context.msg.getRawContent();
        this.commandClass = context.command.getClass().getSimpleName();
        this.sent = context.msg.getCreationTime().toInstant().toEpochMilli();
        this.received = 0;//due to deprecation
        this.executed = executed;
        this.duration = executed - this.received;
        this.successful = successful;
    }


    @Nonnull
    @Override
    public Long getId() {
        return this.commandId;
    }

    @Nonnull
    @Override
    public CommandStats setId(final Long id) {
        this.commandId = id;
        return this;
    }

    public long getInvokerId() {
        return this.invokerId;
    }

    public void setInvokerId(final long invoker) {
        this.invokerId = invoker;
    }

    public long getChannelId() {
        return this.channelId;
    }

    public void setChannelId(final long channelId) {
        this.channelId = channelId;
    }

    public boolean isPrivate() {
        return this.isPrivate;
    }

    public void setPrivate(final boolean aPrivate) {
        this.isPrivate = aPrivate;
    }

    public long getGuildId() {
        return this.guildId;
    }

    public void setGuildId(final long guildId) {
        this.guildId = guildId;
    }

    public String getRawMessage() {
        return this.rawMessage;
    }

    public void setRawMessage(final String rawMessage) {
        this.rawMessage = rawMessage;
    }

    public String getCommandClass() {
        return this.commandClass;
    }

    public void setCommandClass(final String commandClass) {
        this.commandClass = commandClass;
    }

    public long getSent() {
        return this.sent;
    }

    public void setSent(final long sent) {
        this.sent = sent;
    }

    public long getReceived() {
        return this.received;
    }

    public void setReceived(final long received) {
        this.received = received;
    }

    public long getExecuted() {
        return this.executed;
    }

    public void setExecuted(final long executed) {
        this.executed = executed;
    }

    public long getDuration() {
        return this.duration;
    }

    public void setDuration(final long duration) {
        this.duration = duration;
    }

    public boolean isSuccessful() {
        return this.successful;
    }

    public void setSuccessful(final boolean successful) {
        this.successful = successful;
    }
}
